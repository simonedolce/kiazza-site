{% extends 'base.html.twig' %}
{% import "profilo_rapper/macro/_profilo_macro.html.twig" as macro %}
{% import "macro/_macro-common.html.twig" as macroCommon %}
{% block title %}{% endblock %}

{% block body %}
<div class="container padding-mobile" style="margin-top: 1%">

    {{ form_start(form) }}
    <section class="section">
        <h1 class="title is-2">Immagine Profilo</h1>
        <h1 class="title is-5">Carica l'immagine che verrà visualizzata sul profilo</h1>

        {{ macro.fileInput(form.bannerProfilo.idImmagine.file) }}

        <article class="message is-dark">
            <div class="message-body">
                L'immagine deve rispettare lo standard di 1280x720px
            </div>
        </article>
    </section>

    <section class="section">
        <h1 class="title is-2">Avatar Profilo</h1>
        <h1 class="title is-5">Carica l'immagine che verrà visualizzata come avatar del profilo</h1>
        <div class="tile is-ancestor">

            <div class="tile is-4 is-vertical is-parent">

                <div class="tile is-child">
                    {{ macro.fileInput(form.avatar.idImmagine.file) }}
                </div>
            </div>
            <div class="tile is-parent">
                <div class="tile is-child">
                    <figure class="image is-128x128">
                        {{ macroCommon.resolveAvatarPath(app.user) }}
                    </figure>
                </div>
            </div>

        </div>
    </section>

    <section class="section">
        <h1 class="title is-2">Informazioni personali</h1>
        <div class="tile is-ancestor">

            <div class="tile is-4 is-vertical is-parent">

                <div class="tile is-child">
                    <div class="field">
                        {{ form_label(form.nomeArtista) }}
                        <p class="control has-icons-left">
                            {{ form_widget(form.nomeArtista) }}
                            <span class="icon is-small is-left"><i class="fa-solid fa-music"></i></span>
                        </p>
                    </div>

                    <div class="field">
                        {{ form_label(form.contattoFacebook) }}
                        <p class="control has-icons-left">
                            {{ form_widget(form.contattoFacebook) }}
                            <span class="icon is-small is-left"><i class="fa-brands fa-facebook"></i></span>
                        </p>
                    </div>
                    <div class="field">
                        {{ form_label(form.contattoInstagram) }}
                        <p class="control has-icons-left">
                            {{ form_widget(form.contattoInstagram) }}
                            <span class="icon is-small is-left"><i class="fa-brands fa-instagram"></i></span>
                        </p>
                    </div>
                    <div class="field">
                        {{ form_label(form.contattoEmail) }}
                        <p class="control has-icons-left">
                            {{ form_widget(form.contattoEmail) }}
                            <span class="icon is-small is-left"><i class="fa-solid fa-envelope"></i></span>
                        </p>
                    </div>
                </div>
            </div>

            <div class="tile is-parent">
                <div class="tile is-child">
                    {{ form_row(form.bio) }}
                </div>
            </div>

        </div>
    </section>

    <section class="section">
        <h1 class="title is-2">Carica un tuo video Youtube</h1>
        <div class="field">
            {{ form_label(form.videoYoutube) }}
            <p class="control has-icons-left">
                {{ form_widget(form.videoYoutube) }}
                <span class="icon is-small is-left"><i class="fa-brands fa-youtube"></i></span>
            </p>
        </div>
    </section>

    <section class="section">
        <h1 class="title is-2">Sincronizza con Spotify</h1>
        <div class="field">
            {{ form_label(form.idSpotify) }}
            <p class="control has-icons-left">
                {{ form_widget(form.idSpotify) }}
                <span class="icon is-small is-left"><i class="fa-brands fa-spotify"></i></span>
            </p>
        </div>
        {{ form_widget(form.Salva) }}
        <div class="input-albums">

        </div>

    </section>


    {{ form_end(form) }}

    <div id="modal-spotify" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content box artist-spotify-modal">

            <div id="colonne-albums" class="colums">

            </div>

            <button id="sincronizza-albums" class="button is-primary">Sincronizza</button>

        </div>
        <button class="modal-close is-large" aria-label="close"></button>
    </div>

</div>


    <script src="https://unpkg.com/filepond@^4/dist/filepond.js"></script>
    <script>


        const avatarImg = $('.avatar-img');
        const avatarImgName = $('.avatar-file-name');
        const idSpotify = $('#form_modifica_profilo_idSpotify');
        const sincronizzaButton = $('#sincronizza-albums');
        const inputAlbums = $('.input-albums');

        sincronizzaButton.on('click', function (){
            let checkedAlbum = $('#colonne-albums').find('input[type=checkbox]:checked');
            let objects = [];

            for(let i = 0; i < checkedAlbum.length; i++){
                objects[i] = JSON.parse(checkedAlbum[i].value);
            }

            callSyncService(objects);
            $("#modal-spotify").removeClass('is-active')
        });

        function callSyncService(objects){
            let settings = {
                "url": '{{ urlChiamataSync }}',
                "method": "post",
                'beforeSend': function (xhr){
                    xhr.setRequestHeader('albums', JSON.stringify(objects));
                },
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json"
                },
            };

           $.ajax(settings).done(function (){
                alert("TT'appooo");
           });

        }

        avatarImg.change(function (){
            setFileName();
        })


        function setFileName(){
            let fileName = avatarImg.val().replace('C:\\fakepath\\', '');
            avatarImg.val(fileName);
        }

        idSpotify.on('change', async function (){
            let modal = $('#modal-spotify');
            let colonne = $('#colonne-albums');
            colonne.empty();
            let idSpotify = $(this).val();
            let albums = await getData(idSpotify);

            if(albums){
                albums.forEach( album => {
                    let column = makeAlbumColumn(album);
                    column.appendTo(colonne);
                });
                $("#modal-spotify").addClass('is-active')
            }




        });

        function makeAlbumColumn(album){

            let artisti = [];
            album.artists.forEach( artist => {
                artisti.push(artist.name);
            });

            let column          = jQuery('<div/>', {class: 'column'});
            let section         = jQuery('<section/>', {class: 'section'});
            let ancestorTile    = jQuery('<div>', {class:'tile is-ancestor'});
            let imgTile         = jQuery('<div>', {class:'tile'});
            let textTile        = jQuery('<div>', {class:'tile'});
            let figure          = jQuery('<figure/>', {class: 'image is-128x128'});
            let img             = jQuery('<img/>', {src: album.images[0].url});
            let nomeAlbum       = jQuery('<p/>', {class:'title', text: album.name, style:'color:black'});
            let nomiArtisti     = jQuery('<p/>', {class:'subtitle', text: artisti.join(','),style:'color:black'});
            let content         = jQuery('<div/>', {class:'content'});
            let checkBox        = jQuery('<input/>', {type:'checkbox', class:'checkbox', value: JSON.stringify(album)});

            img.appendTo(figure);
            figure.appendTo(imgTile);
            imgTile.appendTo(ancestorTile);

            nomeAlbum.appendTo(content);
            nomiArtisti.appendTo(content);
            checkBox.appendTo(content);
            content.appendTo(textTile);
            textTile.appendTo(ancestorTile);
            ancestorTile.appendTo(section);
            section.appendTo(column);

            return column;
        }



        async function getData(id){
            let toReturn;
            try {
                const artist = await isRealSpotifyArtist(id);
                const albums = await getAlbumFromSpotifyId(id);
                return albums.items;
            } catch(err) {

            }

        }

        async function isRealSpotifyArtist(id){
            let artist;

            let settings = {
                "url": "https://v1.nocodeapi.com/pureenee/spotify/FckqiwjCVuscYTni/artists?id=" + id,
                "method": "get",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json"
                },
            };

            return $.ajax(settings);
        }

        function getAlbumFromSpotifyId(id){
            let settings = {
                "url": "https://v1.nocodeapi.com/pureenee/spotify/FckqiwjCVuscYTni/artists?id="+id+"&queryType=albums",
                "method": "get",
                "timeout": 0,
                "headers": {
                    "Content-Type": "application/json"
                },
            };
            return $.ajax(settings);
        }

    </script>
{% endblock %}
